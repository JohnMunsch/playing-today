type Query {
  info: String!
  me: Player!
  games: [Game!]!
  players: [Player!]!
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload
  leave(_id: String!): Boolean
  login(email: String!, password: String!): AuthPayload

  playing(_id: String!, playingToday: Boolean!): Player!
  reset: Boolean!
}

type Subscription {
  statusChange: [Player]!
}

type AuthPayload {
  token: String
  player: Player
}

type Game {
  _id: String!
  name: String!
  notes: String
  players: [Recommendation!]
}

type Recommendation {
  num: Int!
  best: Float!
  not: Float!
  recommended: Float!
}

input RecommendationInput {
  num: Int!
  best: Float!
  not: Float!
  recommended: Float!
}

type Player {
  _id: String!
  email: String!
  playingToday: Boolean!
}
